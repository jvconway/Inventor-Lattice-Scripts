oPath = ThisDoc.Path
GoExcel.Open(oPath & "/cooler.layout_table.xlsx", "cooler")

Dim dPi = Math.PI
Dim i = 2
Dim j = 1
Dim pointA = ThisDoc.Geometry.Point(0,0,0)

'Place Origin Component because you can't constrain to the Top level assembly origin planes/axes
Dim componentA = Components.Add("", "Origin.ipt", position := Nothing, grounded := True, visible := False, appearance := Nothing)

'Place Lattice Elements
ENDTEST = GoExcel.CellValue("A" & i)

While ENDTEST <> "" 
	
	X = GoExcel.CellValue("C" & i) * 1000.0
	Y = GoExcel.CellValue("D" & i) * 1000
	Z = GoExcel.CellValue("E" & i) * 1000
	theta =  -GoExcel.CellValue("F" & i) * 180 / dPi
	phi = GoExcel.CellValue("G" & i) * 180 / dPi	
	psi = GoExcel.CellValue("H" & i) * 180 / dpi
	
	name = GoExcel.CellValue("B" & i) & "_" & GoExcel.CellValue("A" & i)
	element_type = GoExcel.CellValue("I" & i)
	length = GoExcel.CellValue("J" & i) * 1000
	angle = GoExcel.CellValue("K" & i) * (360 / (2 * PI))
	short_length = Floor(length)
	short_angle = Floor(Abs(angle))

	If element_type = "Sbend" Then
		If angle > 0 Then
			partname = oPath & "\" & element_type & short_length & "_" & short_angle & ".ipt"
		Else
			partname = oPath & "\" & element_type & short_length & "_" & short_angle & "M" & ".ipt"
		End If
	Else
		partname = oPath & "\" & element_type & short_length & ".ipt"
	End If
	
	pointA = ThisDoc.Geometry.Point(X,Y,Z)
	
	Dim componentB = Components.Add(name, partname, position := pointA, grounded := False, visible := True, appearance := Nothing)
	
	Constraints.AddAngle("Angle" & j, componentB, "X Axis", "Origin:1", "X Axis",angle := theta, solutionType := AngleConstraintSolutionTypeEnum.kDirectedSolution, refVecComponent := Nothing, refEntityName := Nothing, biasPoint1 := Nothing, biasPoint2 := Nothing)
	j = j + 1
	'Constraints.AddAngle("Angle2", "Quad:1", "Y Axis", "Origin:1", "Y Axis",angle := 45.0, solutionType := AngleConstraintSolutionTypeEnum.kDirectedSolution, refVecComponent := Nothing, refEntityName := Nothing, biasPoint1 := Nothing, biasPoint2 := Nothing)
	j = j + 1
	'Constraints.AddAngle("Angle2", "Quad:1", "Y Axis", "Origin:1", "Y Axis",angle := 45.0, solutionType := AngleConstraintSolutionTypeEnum.kDirectedSolution, refVecComponent := Nothing, refEntityName := Nothing, biasPoint1 := Nothing, biasPoint2 := Nothing)
	j = j + 1
	i = i + 1
	
	 
	
	ENDTEST = GoExcel.CellValue("A" & i)

End While


'zoom all
'ThisApplication.ActiveView.Fit
ThisApplication.CommandManager.ControlDefinitions.Item("AppTopViewCmd").Execute